# Database Migration Script for FADO CRM Phase 1 Completion import sys import os # Add current directory to path sys.path.append(os.path.dirname(os.path.abspath(__file__))) from database import SessionLocal, engine from sqlalchemy import text import logging # Set up logging logging.basicConfig(level=logging.INFO) logger = logging.getLogger(__name__) def migrate_database(): """Migrate database to add missing columns for Phase 1 completion""" db = SessionLocal() try: logger.info("Starting database migration for Phase 1 completion...") # Check if is_active column exists in san_pham table try: result = db.execute(text("SELECT is_active FROM san_pham LIMIT 1")) logger.info("Column 'is_active' already exists in san_pham table") except Exception: logger.info("Adding 'is_active' column to san_pham table...") db.execute(text("ALTER TABLE san_pham ADD COLUMN is_active BOOLEAN DEFAULT 1")) db.commit() logger.info("Successfully added 'is_active' column to san_pham table") # Update existing products to be active logger.info("Updating existing products to be active...") db.execute(text("UPDATE san_pham SET is_active = 1 WHERE is_active IS NULL")) db.commit() logger.info("Database migration completed successfully!") # Verify migration count = db.execute(text("SELECT COUNT(*) FROM san_pham WHERE is_active = 1")).scalar() logger.info(f"Found {count} active products after migration") return True except Exception as e: logger.error(f"Migration failed: {str(e)}") db.rollback() return False finally: db.close() if __name__ == "__main__": success = migrate_database() if success: print(" Database migration completed successfully!") sys.exit(0) else: print(" Database migration failed!") sys.exit(1)