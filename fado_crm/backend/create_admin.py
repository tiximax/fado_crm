# FADO CRM - Create First Admin User # Script tao tai khoan admin dau tien cho he thong! import sys import os from getpass import getpass from sqlalchemy.orm import Session # Add current directory to path de import duoc cac modules sys.path.append(os.path.dirname(os.path.abspath(__file__))) from database import SessionLocal, create_tables from models import NguoiDung, VaiTro from auth import get_password_hash def create_admin_user(): """ Tao tai khoan admin dau tien""" print(" FADO CRM - Tao tai khoan Admin dau tien") print("=" * 50) # Create database tables if not exist create_tables() db: Session = SessionLocal() try: # Check if admin already exists existing_admin = db.query(NguoiDung).filter( NguoiDung.vai_tro == VaiTro.ADMIN ).first() if existing_admin: print(f" Admin user da ton tai: {existing_admin.email}") confirm = input("Ban co muon tao admin user khac khong? (y/n): ") if confirm.lower() != 'y': return # Get admin info print("\n Nhap thong tin Admin:") email = input(" Email: ").strip() if not email: print(" Email khong duoc de trong!") return # Check if email already exists existing_user = db.query(NguoiDung).filter(NguoiDung.email == email).first() if existing_user: print(" Email nay da duoc su dung!") return ho_ten = input(" Ho ten: ").strip() if not ho_ten: print(" Ho ten khong duoc de trong!") return so_dien_thoai = input(" So dien thoai (optional): ").strip() # Get password securely print(" Nhap mat khau (toi thieu 6 ky tu):") password = getpass("Mat khau: ") if len(password) < 6: print(" Mat khau phai co toi thieu 6 ky tu!") return password_confirm = getpass("Xac nhan mat khau: ") if password != password_confirm: print(" Mat khau xac nhan khong khop!") return # Create admin user admin_user = NguoiDung( email=email, ho_ten=ho_ten, so_dien_thoai=so_dien_thoai if so_dien_thoai else None, mat_khau_hash=get_password_hash(password), vai_tro=VaiTro.ADMIN, is_active=True ) db.add(admin_user) db.commit() db.refresh(admin_user) print("\n Tao tai khoan Admin thanh cong!") print(f" Ho ten: {admin_user.ho_ten}") print(f" Email: {admin_user.email}") print(f" Vai tro: {admin_user.vai_tro.value}") print(f" ID: {admin_user.id}") print("\n Ban co the dang nhap voi thong tin nay!") except Exception as e: db.rollback() print(f" Loi tao admin user: {str(e)}") finally: db.close() def create_sample_users(): """ Tao mot so user mau cho testing""" print("\n Tao user mau cho testing...") db: Session = SessionLocal() sample_users = [ { "email": "manager@fado.vn", "ho_ten": "Nguyen Van Manager", "password": "manager123", "vai_tro": VaiTro.MANAGER, "so_dien_thoai": "0901234567" }, { "email": "staff@fado.vn", "ho_ten": "Tran Thi Staff", "password": "staff123", "vai_tro": VaiTro.STAFF, "so_dien_thoai": "0909876543" }, { "email": "viewer@fado.vn", "ho_ten": "Le Van Viewer", "password": "viewer123", "vai_tro": VaiTro.VIEWER, "so_dien_thoai": "0908765432" } ] try: for user_data in sample_users: # Check if user already exists existing = db.query(NguoiDung).filter(NguoiDung.email == user_data["email"]).first() if existing: print(f" User {user_data['email']} da ton tai") continue user = NguoiDung( email=user_data["email"], ho_ten=user_data["ho_ten"], so_dien_thoai=user_data["so_dien_thoai"], mat_khau_hash=get_password_hash(user_data["password"]), vai_tro=user_data["vai_tro"], is_active=True ) db.add(user) print(f" Tao {user_data['vai_tro'].value}: {user_data['email']}") db.commit() print(" Tao user mau thanh cong!") except Exception as e: db.rollback() print(f" Loi tao user mau: {str(e)}") finally: db.close() if __name__ == "__main__": try: create_admin_user() # Ask if user wants to create sample users create_samples = input("\n Ban co muon tao user mau cho testing khong? (y/n): ") if create_samples.lower() == 'y': create_sample_users() print("\n Script hoan thanh! He thong san sang su dung!") except KeyboardInterrupt: print("\n\n Da huy bo!") except Exception as e: print(f" Loi khong mong doi: {str(e)}")