# Admin settings and audit logs tests (Phase 5) import pytest from fastapi.testclient import TestClient from main import app from models import NguoiDung, VaiTro, SystemSetting, AuditLog from database import SessionLocal def test_system_settings_crud(client, db_session): # Create admin in test DB admin = NguoiDung( email="admin@test.local", ho_ten="Test Admin", mat_khau_hash="x", vai_tro=VaiTro.ADMIN, is_active=True ) db_session.add(admin) db_session.commit() db_session.refresh(admin) # Override admin dependency to return this admin from main import get_admin_user app.dependency_overrides[get_admin_user] = lambda: admin # PUT upsert setting r = client.put("/admin/system-settings/app_name", json={ "value": "FADO CRM PRO", "description": "Ten hien thi ung dung" }) assert r.status_code == 200 data = r.json() assert data["key"] == "app_name" assert data["value"] == "FADO CRM PRO" # GET single r = client.get("/admin/system-settings/app_name") assert r.status_code == 200 data = r.json() assert data["value"] == "FADO CRM PRO" # GET all r = client.get("/admin/system-settings") assert r.status_code == 200 settings = r.json() assert any(s["key"] == "app_name" for s in settings) # Cleanup override app.dependency_overrides.clear() def test_audit_logs_list(client, db_session): # Seed an audit log row log = AuditLog(action="unit_test", resource="test", resource_id="1", user_id=None) db_session.add(log) db_session.commit() # Create admin and override dependency admin = NguoiDung( email="admin2@test.local", ho_ten="Test Admin 2", mat_khau_hash="x", vai_tro=VaiTro.ADMIN, is_active=True ) db_session.add(admin) db_session.commit() db_session.refresh(admin) from main import get_admin_user app.dependency_overrides[get_admin_user] = lambda: admin r = client.get("/admin/audit-logs") assert r.status_code == 200 logs = r.json() assert isinstance(logs, list) assert any(item["action"] == "unit_test" for item in logs) # Cleanup override app.dependency_overrides.clear() 